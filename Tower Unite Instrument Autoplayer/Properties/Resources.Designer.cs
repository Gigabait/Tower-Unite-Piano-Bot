//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tower_Unite_Instrument_Autoplayer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tower_Unite_Instrument_Autoplayer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to breaks,
        ///custom_notes,
        ///default_breaks,
        ///export_import,
        ///key_bindings,
        ///main_note_window,
        ///modifiers,
        ///music_pieces,
        ///save_load.
        /// </summary>
        internal static string _include {
            get {
                return ResourceManager.GetString("_include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tower Unite Instrument Autoplayer is developed by Matias Jensen.
        ///
        ///This program gives players the ability to play songs in games that supports virtual pianos.
        ///The software is primarily made for Tower Unite and therefore it is not guarantied to work in any other case but it very likely will..
        /// </summary>
        internal static string about {
            get {
                return ResourceManager.GetString("about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breaks allow you to make longer (or shorter) pauses between notes.
        ///Just define a break and use the character in the note creator to use it..
        /// </summary>
        internal static string breaks {
            get {
                return ResourceManager.GetString("breaks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string custom_notes {
            get {
                return ResourceManager.GetString("custom_notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the Speeds documentation file.
        /// </summary>
        internal static string default_breaks {
            get {
                return ResourceManager.GetString("default_breaks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string export_import {
            get {
                return ResourceManager.GetString("export_import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybindings allow you to define a set of buttons that will let you play and stop the song from within the application on which you use the software.
        ///That way you will not need to tab out between the software and the application..
        /// </summary>
        internal static string key_bindings {
            get {
                return ResourceManager.GetString("key_bindings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string main_note_window {
            get {
                return ResourceManager.GetString("main_note_window", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string modifiers {
            get {
                return ResourceManager.GetString("modifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string music_pieces {
            get {
                return ResourceManager.GetString("music_pieces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string save_load {
            get {
                return ResourceManager.GetString("save_load", resourceCulture);
            }
        }
    }
}
